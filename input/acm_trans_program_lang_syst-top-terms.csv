Topic, Top Terms
Topic 00, error global recovery parsers syntactic repair syntax flexible data-flow technique modular communication problems abstraction constraint environments user parsing errors definitions
Topic 01, new relational method reasoning about formal probabilistic structured slicing theory fairness interfaces toward structures development interprocedural specifications compilers editorial local
Topic 02, algorithm practical prolog interpretation graphs transformational iterative denotational dataflow loops interprocedural reference flexible higher-order ada compiling trees problems parsing compilers
Topic 03, allocation attribute register grammars storage instructions incremental scheduling grammar embedded framework software management evaluator propagation loops space demand-driven processors translation
Topic 04, partial experimental some comments recursive techniques prolog denotational symbolic interpretation recursion representations functional calculus can parameterized matching memory strings editorial
Topic 05, system inference array proof algebraic formal reasoning about shape access expressions local design software polymorphic constraint definition applications information optimizing
Topic 06, model checking machines state hierarchical modular finite real-time abstraction cost software compile-time translation high-level layout trees memory method transformations compiler
Topic 07, specifications from synthesis correctness proofs recursive techniques functional method loops compiler calculus recursion toward computing csp parallelization descriptions passing parameterized
Topic 08, parallel generation computation optimal tree form machines expressions storage compiler structured caching analyses instructions memory transformations theory design abstraction assignment
Topic 09, framework fast embedded pattern matching register strings interprocedural practical graphs memory cache calculus functional pointer processors demand-driven iteration subtyping machine
Topic 10, verification concurrent proving liveness bytecode networks via finite correct properties assignment concurrency resource constraint standard rules asynchronous iteration bounds form
Topic 11, techniques compiler memory calculus via polymorphic objects formal rewriting functional note recursion study web software services recursive translation machine effective
Topic 12, program slicing dependence graph structures use its transformation transformations abstraction development support interprocedural binary software theory definition computing parallelization object
Topic 13, termination algorithms garbage detection collection derivation computations on-the-fly transformational functional loops functions constraints handling object through refinement csp safe time
Topic 14, evaluation incremental expressions grammars propagation parsing constraint part demand-driven design interpretation compilation compiler editors functional matching flexible prolog reduction construction
Topic 15, processes temporal communicating sequential properties verifying proof without computations synthesis correctness axiomatic concurrent local floating-point design reduction proofs proving denotational
Topic 16, concurrent problem variables shared symbolic solution representations objects implementing note comments functional computing passing demand-driven analyses memory compilers polymorphic synchronization
Topic 17, based communication scheduling linear technique time data-flow evaluator grammar functional compiler trace interprocedural compilers software functions higher-order loops environments objects
Topic 18, execution transformation support functional memory calculus machine compiler objects time loops optimizing compilation modular functions theory interprocedural polymorphic development transformations
